name: MLOps CI/CD Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    train_and_evaluate:
        runs-on: ubuntu-latest
        services:
            prometheus:
                image: prom/prometheus:latest
                ports:
                    - 9090:9090
                volumes:
                    - ./prometheus.yml:/etc/prometheus/prometheus.yml

        steps:
            # Step 1: Checkout Repository
            - name: Checkout repository
              uses: actions/checkout@v2

            # Step 2: Set up Python and Install Dependencies
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            # Step 3: Run Training Script
            - name: Run Training Script
              env:
                  # Set environment variables for DVC or other configurations
                  SUPABASE_S3_ENDPOINT: ${{ secrets.SUPABASE_S3_ENDPOINT }}
                  SUPABASE_S3_REGION: ${{ secrets.SUPABASE_S3_REGION }}
                  SUPABASE_S3_ACCESS_KEY_ID: ${{ secrets.SUPABASE_S3_ACCESS_KEY_ID }}
                  SUPABASE_S3_SECRET_ACCESS_KEY: ${{ secrets.SUPABASE_S3_SECRET_ACCESS_KEY }}
              run: |
                  python script/train.py

            # Step 4: Debug Prometheus Logs (Optional)
            - name: Debug Prometheus Logs
              run: |
                  docker logs prometheus

            # Step 5: Verify Metrics Push to Grafana Cloud
            - name: Verify Metrics Push
              run: |
                  echo "Grafana Cloud Prometheus data should now be available. Check your Grafana dashboard for metrics."
