name: Deploy to Vercel

on:
    workflow_run:
        workflows: ["MLOps CI/CD Pipeline"]
        types:
            - completed

jobs:
    deploy:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9.18"
                  cache: "pip"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip setuptools wheel
                  pip install -r requirements-deploy.txt --no-cache-dir

            - name: Install Vercel CLI
              run: npm install --global vercel@latest

            - name: Prepare for deployment
              run: |
                  # Create necessary directories
                  mkdir -p vercel/output/functions/script
                  mkdir -p vercel/output/static

                  # Copy application files
                  cp -r script/* vercel/output/functions/script/
                  cp requirements-deploy.txt vercel/output/functions/
                  cp vercel.json vercel/output/

                  # Create Python symlink
                  sudo ln -sf $(which python3.9) /usr/local/bin/python3.9
                  sudo ln -sf $(which pip3) /usr/local/bin/pip3.9

                  # Verify Python setup
                  echo "Python version:"
                  python3.9 --version
                  echo "Pip version:"
                  pip3.9 --version
                  echo "Python path:"
                  which python3.9
                  echo "Pip path:"
                  which pip3.9

                  # Verify files
                  echo "Checking deployment files:"
                  ls -la vercel/output/functions/script/
                  ls -la vercel/output/

            - name: Deploy to Vercel
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
              run: |
                  echo "Starting Vercel deployment..."
                  vercel pull --yes --environment=production --token=$VERCEL_TOKEN
                  vercel build --token=$VERCEL_TOKEN
                  vercel deploy --prod --token=$VERCEL_TOKEN

            - name: Cleanup
              if: always()
              run: |
                  rm -rf vercel/output/functions
                  rm -rf vercel/output/static
                  sudo rm -f /usr/local/bin/python3.9
                  sudo rm -f /usr/local/bin/pip3.9
