name: MLOps Continuous Improvement Pipeline

on:
    push:
        paths:
            - "dataset/**"
            - "models/**"
            - "script/**"
    schedule:
        - cron: "0 0 * * *" # Run daily at midnight
    workflow_dispatch:

env:
    SUPABASE_BUCKET: mlops-workflow
    AWS_ACCESS_KEY_ID: ${{ secrets.SUPABASE_S3_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.SUPABASE_S3_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ap-southeast-1
    DVC_REMOTE_URL: s3://mlops-workflow
    MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
    DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
    DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
    PROMETHEUS_API_KEY: ${{ secrets.PROMETHEUS_API_KEY }}
    PROMETHEUS_USERNAME: "1902030"
    PROMETHEUS_REMOTE_WRITE_URL: ${{ secrets.PROMETHEUS_REMOTE_WRITE_URL }}
    LOKI_API_KEY: ${{ secrets.GRAFANA_CLOUD_API_KEY }}
    LOKI_USERNAME: "1050298"
    LOKI_URL: "https://logs-prod-012.grafana.net"

jobs:
    data-versioning-and-drift:
        runs-on: ubuntu-latest
        outputs:
            drift_detected: ${{ steps.drift_check.outputs.drift_detected }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.8"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install dvc[s3] pandas numpy scikit-learn evidently mlflow
                  pip install -r requirements.txt

            - name: Configure DVC remote
              run: |
                  dvc init --no-scm
                  dvc remote add -d storage s3://mlops-workflow
                  dvc remote modify storage endpointurl https://zyzahbhyrgrsakuwwdjr.supabase.co/storage/v1/s3
                  dvc remote modify storage region ap-southeast-1

            - name: DVC pull
              run: |
                  dvc pull
                  echo "âœ… DVC pull completed"

            - name: Check for data drift
              id: drift_check
              run: python script/check_data_drift.py
              continue-on-error: true

    model-comparison:
        needs: data-versioning-and-drift
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.8"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install mlflow pandas numpy scikit-learn
                  pip install -r requirements.txt

            - name: Compare model versions
              run: python script/compare_models.py
              env:
                  PREVIOUS_MODEL_RUN_ID: ${{ github.event.inputs.previous_run_id }}
                  CURRENT_MODEL_RUN_ID: ${{ github.event.inputs.current_run_id }}

    ab-testing-setup:
        needs: model-comparison
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.8"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install mlflow pandas numpy scikit-learn requests
                  pip install -r requirements.txt

            - name: Setup A/B testing
              run: python script/setup_ab_testing.py

    automated-retraining:
        needs: [data-versioning-and-drift, model-comparison]
        if: needs.data-versioning-and-drift.outputs.drift_detected == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.8"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install torch torchvision mlflow pandas numpy scikit-learn
                  pip install -r requirements.txt

            - name: Retrain model
              run: python script/retrain_model.py
              env:
                  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
                  MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
                  MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}

    monitoring-update:
        needs: [automated-retraining, ab-testing-setup]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Update monitoring dashboards
              run: python script/update_monitoring.py
              env:
                  GRAFANA_API_KEY: ${{ secrets.GRAFANA_CLOUD_API_KEY }}
